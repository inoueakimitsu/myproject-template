"""Poetry を使用して requirements.txt から environment.yml を生成します"""

import subprocess


def generate_conda_environment(
    input_pyproject_path: str = "pyproject.toml",
    output_environment_path: str = "environment.yml",
) -> None:
    """Generate an environment.yml file from the requirements specified in
    pyproject.toml using Poetry.

    Generate an environment.yml file from the requirements specified in
    pyproject.toml using Poetry. The file is generated using the poetry2conda
    command line tool available from https://pypi.org/project/poetry2conda/ .

    Args:
        input_pyproject_path (str): The path to the pyproject.toml file. Defaults to "pyproject.toml".
        output_environment_path (str): The path to the environment.yml file to be generated. Defaults to "environment.yml".

    Raises:
        CalledProcessError: If the command to generate the environment.yml file fails.
        FileNotFoundError: If the pyproject.toml file is not found.
    """
    # Use Poetry to generate requirements.txt
    cmd = [
        "poetry",
        "run",
        "poetry2conda",
        input_pyproject_path,
        output_environment_path,
    ]
    try:
        subprocess.check_call(cmd)
    except subprocess.CalledProcessError as exception:
        raise exception
    except FileNotFoundError as exception:
        raise exception


def remove_hash_lines(file_path):
    """Remove all lines in the file at the given path that start with a hash (#)
    character.

    Remove all lines in the file at the given path that start with a hash (#)
    character. This is useful for removing comments from an environment.yml file
    generated by Poetry.

    Args:
        file_path (str): The path to the file to be cleaned.

    Raises:
        FileNotFoundError: If the file at the given path does not exist.
        PermissionError: If the user does not have permission to write to the file at the given path.
    """
    with open(file_path, encoding="utf8") as file_read:
        lines = file_read.readlines()

    # # で始まらない行のみを取得
    cleaned_lines = [line for line in lines if not line.strip().startswith("#")]

    with open(file_path, "w", encoding="utf8") as file_write:
        file_write.writelines(cleaned_lines)


if __name__ == "__main__":
    generate_conda_environment(input_pyproject_path="pyproject.toml", output_environment_path="environment.yml")
    remove_hash_lines("environment.yml")
