# 一般的な pre-commit フックのリポジトリ
repos:
  # コードの基本的な品質を保つフック群
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0  # 任意のバージョン
    hooks:
      - id: trailing-whitespace
      # かなりシンプルな YAML でないとファイルを壊すことがあるので無効化します。
      # - id: sort-simple-yaml
      # requirements.txt へのエクスポーターとバッティングするので無効化します。
      # - id: requirements-txt-fixer
      # - id: no-commit-to-branch  # TODO: 人によっては不便になるのでコメントアウトします。
      - id: name-tests-test
      - id: mixed-line-ending
      - id: forbid-submodules
      - id: forbid-new-submodules
      - id: fix-encoding-pragma
        args: ["--remove"]
      - id: fix-byte-order-marker
      - id: file-contents-sorter
      - id: end-of-file-fixer
        # requirements.txt が poetry-export により更新されるので二重に変更されないようにします。
        exclude: '^docs/.*|requirements\.txt'
      # - id: double-quote-string-fixer  # TODO: プロジェクトによって変更したほうがよいです。
      - id: detect-private-key
      # - id: detect-aws-credentials  # TODO: AWS を使うプロジェクトでは有効にします。
      - id: destroyed-symlinks
      - id: debug-statements
      - id: check-yaml
      - id: check-xml
      - id: check-vcs-permalinks
      - id: check-toml
      - id: check-symlinks
      - id: check-shebang-scripts-are-executable
      - id: check-merge-conflict
      - id: check-executables-have-shebangs
      - id: check-case-conflict
      - id: check-case-conflict
      - id: check-builtin-literals
      - id: check-ast
      - id: check-added-large-files

  - repo: https://github.com/astral-sh/ruff-pre-commit
    # Ruff version.
    rev: v0.4.5
    hooks:
      # Run the linter.
      - id: ruff
        args: [ --fix ]
      # Run the formatter.
      - id: ruff-format

  - repo: local
    hooks:
    - id: pdoc3
      name: pdoc3
      language: system
      types: [python]
      entry: "poetry run pdoc --html --force -o docs --config show_source_code=False --config latex_math=True myproject"
      always_run: true
      pass_filenames: false

  # プロジェクト独自の pytest フック
  - repo: local
    hooks:
    -   id: pytest
        name: pytest
        stages: [commit]
        language: system
        entry: poetry run pytest -s -v .
        types: [python]
        pass_filenames: false
        always_run: true
    -   id: pytest-cov
        name: pytest-cov
        stages: [commit]
        language: system
        entry: poetry run pytest -v --cov=myproject --cov-fail-under=50
        types: [python]
        pass_filenames: false
        always_run: true

  # poetry の内容チェックと requirements.txt へのエクスポート
  - repo: https://github.com/python-poetry/poetry
    rev: 1.6.1  # add version here
    hooks:
    - id: poetry-check
    - id: poetry-lock
    - id: poetry-export
      args: ["-f", "requirements.txt", "-o", "requirements.txt", "--without-hashes"]

  - repo: https://github.com/commitizen-tools/commitizen
    rev: v3.13.0
    hooks:
      - id: commitizen
      - id: commitizen-branch
        stages: [push]

  - repo: https://gitlab.com/smop/pre-commit-hooks
    rev: v1.0.0
    hooks:
      - id: check-poetry  # pyproject.toml ファイルの構造を検証します。

  # jupyter notebook の output やメタデータを削除します。
  # セルに # [pin] や # [donotremove] と書くと出力を残せます。
  - repo: https://github.com/roy-ht/pre-commit-jupyter
    rev: v1.2.1
    hooks:
      - id: jupyter-notebook-cleanup
        args:
          - --remove-kernel-metadata
          - --pin-patterns
          - "[pin];[donotremove]"
